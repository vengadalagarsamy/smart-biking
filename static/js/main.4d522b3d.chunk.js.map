{"version":3,"sources":["SearchContext.js","Search.js","Home/Home.js","Weatherforecast/Weatherforecast.js","Gear/gear.js","assets/sunny.jpg","assets/cloudy.jpg","Gear/gearList.js","Gear/gearListcontainer.js","Currentweather/Currentweather.js","reportWebVitals.js","index.js"],"names":["SearchContext","createContext","SearchProvider","props","useState","query","setQuery","weather","setWeather","forecast","setForecast","Provider","value","ObtQuery","ObtWeather","ObtForecast","ObtKey","ObtBase","children","Search","useContext","stateQuery","setstateQuery","stateWeather","setstateWeather","setstateForecast","stateKey","stateBase","className","type","placeholder","onChange","e","target","onKeyPress","evt","key","fetch","then","res","json","result","console","log","rest","forresult","name","to","class","Home","main","temp","d","day","getDay","date","getDate","month","getMonth","getFullYear","dateBuilder","Date","sys","country","Math","round","description","feels_like","Weatherforecast","stateForecast","days","months","firday","list","dt","secday","thiday","forday","fivday","city","year","hour","getHours","minute","getMinutes","todayDate","humidity","pressure","style","margin","display","Gear","state","title","message","imageUrl","tags","styles","fontSize","backgroundColor","borderRadius","opacity","padding","messageStyle","Fragment","this","Component","GearList","gear","id","currentLocation","backgroundImage","sunny","buttonHeight","backgroundSize","width","height","textAlign","paddingTop","fontColor","search","getWeather","bind","url","resp","data","setVars","catch","newGear","push","wind","speed","currentDate","sunset","sunrise","setState","cloudy","flexDirection","newQuery","paddingBottom","map","bottom","position","Gearlistcontainer","Currentweather","timeBuilder","visibility","deg","clouds","all","temp_min","temp_max","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","basename","process","exact","path","document","getElementById"],"mappings":"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","file":"static/js/main.4d522b3d.chunk.js","sourcesContent":["import React, {createContext, useState} from 'react';\n// import createContect and useState functions from React Library in\n// order to be able to use global variables in all pages of the app\n\nexport const SearchContext = createContext();\n// export this const in order to import and use all variables in this page\n// onto all other pages\n\nexport const SearchProvider = props => {\n    const [query, setQuery] = useState('');\n    const [weather, setWeather] = useState({});\n    const [forecast, setForecast] = useState({});\n    const API_KEY = \"47d6bf5dc43b1c524c183fd597a64c85\";\n    const API_BASE = \"https://api.openweathermap.org/data/2.5/\";\n\n    /* These are the variables which are passed to the other pages in order to use the information in them.\n        These store the API details needed in order to fetch the information required properly */\n\n    return (\n         <SearchContext.Provider value={{\n            ObtQuery:[query, setQuery],\n            ObtWeather:[weather,setWeather],\n            ObtForecast:[forecast, setForecast],\n            ObtKey:API_KEY,\n            ObtBase:API_BASE\n            }}>\n            {props.children}\n         </SearchContext.Provider>\n\n         /* Returns the information in the variables and allows for them to be modified when calling this page */\n    );\n};","import React, {useContext} from 'react';\nimport {SearchContext} from './SearchContext';\nimport {Link} from \"react-router-dom\";\n// Import all functions required in this page from named libraries\n\nimport './searchpage.css';\n// Import independent styling sheet for this page \n\n\nfunction Search() {\n  const {ObtQuery, ObtWeather, ObtForecast, ObtKey, ObtBase} = useContext(SearchContext);\n  const [stateQuery, setstateQuery] = ObtQuery;\n  const [stateWeather, setstateWeather] = ObtWeather;\n  const [stateForecast, setstateForecast] = ObtForecast;\n  const stateKey = ObtKey;\n  const stateBase = ObtBase;\n\n  // Initialise all variables from the SearchContent.js file in order to fetch API data\n\n  const updateQuery = e => {\n      setstateQuery(e.target.value);\n  };\n  const datafetch = evt => {\n    if (evt.key === \"Enter\") {\n        fetch(`${stateBase}weather?q=${stateQuery}&units=metric&APPID=${stateKey}`)\n        .then(res => res.json())\n        .then(result => {\n            setstateWeather(result);\n            console.log(result);\n        });\n        fetch(`${stateBase}forecast?q=${stateQuery}&units=metric&APPID=${stateKey}`)\n        .then(rest => rest.json())\n        .then(forresult => {\n            setstateForecast(forresult);\n            console.log(forresult);\n        });\n    }\n  }\n  // Fetch all API data using the named location and store them into the variables for use in other pages\n\n  return (\n    <div className=\"search-mainpage\">\n\n      <header className=\"search-branding\">\n        <h1>Smart Biking</h1>\n      </header>\n\n      <main className=\"search-mainbody\">\n        <div>\n            <input\n            type=\"text\"\n            placeholder=\"Enter a location...\"\n            className=\"search-searchbar\"\n            value={stateQuery}\n            onChange={updateQuery}\n            onKeyPress={datafetch}\n            />\n        </div>\n        {/* Allows user to input the location for the forecast and fetch the \n            data by calling the fetch function given above */}\n\n        <h3 className=\"search-giventxt\">Current location: {stateWeather.name}</h3>\n        {/* Display the current location */}\n      </main>\n\n        <Link to={\"/Home\"}><button class=\"button\">Next</button></Link>\n        {/* Link to open the Home page once data has been fetched */}\n    </div>\n  );\n}\n\nexport default Search;\n{/* Export the Search function for access in other pages */}\n","//Import all required functions\nimport React, { useContext } from 'react';\nimport {Link} from \"react-router-dom\";\nimport {SearchContext} from '../SearchContext';\n//import home.css to apply styling to elements of page\nimport './home.css';\n\nfunction Home() {\n  //Initialises variables from SearchContent.js file to fetch API data\n  const {ObtWeather} = useContext(SearchContext);\n  const [stateWeather, setstateWeather] = ObtWeather;\n\n  //function to build date\n  const dateBuilder = (d) => {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thur\", \"Fri\", \"Sat\"];\n\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n\n    return `${day} ${date} ${month}`\n  }\n\n  return (\n    <div className={(typeof stateWeather.main != \"undefined\") ? ((stateWeather.main.temp > 12) ? 'app' : 'app cloudy') : 'app' }> {/*Variable background based on current weather conditions*/}\n      <header>\n        <div className=\"name\">Smart Biking</div>\n        </header>\n        <main>\n          <div className=\"date\"><b>Now</b> {dateBuilder(new Date())}</div> {/*Use datebuilder function to generate todays date and display*/}\n            <div className=\"weatherhead\">\n            {(typeof stateWeather.main != \"undefined\") ? (\n              <div>\n                <div className=\"location\">\n                  <div className=\"city\">{stateWeather.name}, {stateWeather.sys.country}</div> {/*Display location name and country from API*/}\n                </div>\n                <div className=\"weather\">\n                  <div className=\"temperat\">{Math.round(stateWeather.main.temp)}°c</div> {/*Display temperature from weather API*/}\n                  <div className=\"condition\">{stateWeather.weather[0].description} | feels like: {Math.round(stateWeather.main.feels_like)}°c</div>{/*Display description and details of weather*/}\n                </div>\n              </div>\n    ) : ('')}\n          </div>\n          {/*Widgets which link to other app pages*/}\n          <Link to={\"/Currentweather\"}><div className=\"Current\"><div className=\"name3\">Current Weather</div></div></Link>\n          <Link to={\"/Weatherforecast\"}><div className=\"WeaFor\"><div className=\"name3\">Weather Forecast</div></div></Link>\n          <Link to={\"/Gear\"}><div className=\"Gear\"><div className=\"name2\">Gear Recommendation</div></div></Link>\n          <Link to={\"/\"}><div className=\"Search\"><div className=\"name3\">Edit Location</div></div></Link>\n        </main>\n    </div>\n  );\n}\n\nexport default Home;\n","import React, {useContext} from 'react';\nimport {SearchContext} from '../SearchContext';\nimport {Link} from 'react-router-dom';\n// Import all functions required in this page from named libraries\n\nimport './weatherforecast.css';\n// Import independent styling sheet for this page \n\nfunction Weatherforecast() {\n  const {ObtWeather, ObtForecast} = useContext(SearchContext);\n  const [stateWeather, setstateWeather] = ObtWeather;\n  const [stateForecast, setstateForecast] = ObtForecast;\n\n  // Initialise all variables from the SearchContent.js file in order to use \n\n    const days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n    const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n    // Initialise data format required\n\n    const firday = `${stateForecast.list[4].dt}`;\n    const secday = `${stateForecast.list[12].dt}`;\n    const thiday = `${stateForecast.list[20].dt}`;\n    const forday = `${stateForecast.list[28].dt}`;\n    const fivday = `${stateForecast.list[36].dt}`;\n    // Store date information as variables for ease of use\n\n    const dateBuilder = (d) => {\n        let day = days[d.getDay()];\n        let date = d.getDate();\n        return `${day} ${date}`\n    }\n    // Function for returning the date\n\n    const todayDate = (d) => {\n        let day = days[d.getDay()];\n        let month = months[d.getMonth()];\n        let date = d.getDate();\n        let year = d.getFullYear();\n        let hour = d.getHours();\n        let minute = d.getMinutes();\n\n        if (hour < 10) {hour = \"0\" + hour};\n        if (minute < 10) {minute = \"0\" + minute};\n\n        return `${day} ${date} ${month} ${year}, ${hour}:${minute}`\n    }\n    // Function for returning today's date with the time\n\n    return (\n      <div className={(typeof stateWeather.main != \"undefined\") ? ((stateWeather.main.temp > 12) ? 'app' : 'app cloudy') : 'app' }>\n        {/* Load different backgrounds depending on the temperature */}\n        <div className=\"forecast-mainpage\">\n            <header>\n              <div className=\"name\">Smart Biking</div>\n              <h1>Weather Forecast</h1>\n            </header>\n            <main className=\"forecast-mainbody\">\n                <div className=\"forecast-bodycontent\">\n                    <div>\n                        <h3 className=\"forecast-bodymaintitle\">Daily Weather in {stateForecast.city.name}</h3>\n                        <h4 className=\"forecast-bodydatetitle\"><b>Now</b> {todayDate(new Date())}</h4>\n                    </div>\n                    <div className=\"forecast-tablesec\">\n                        <table className=\"forecast-table\">\n                            <tbody  className=\"forecast-tablebody\">\n                                <tr className=\"forecast-tableheadrow\">\n                                    <th className=\"forecast-tablecolumnhedate\">Date</th>\n                                    <th className=\"forecast-tablecolumnhetemp\">Temp</th>\n                                    <th className=\"forecast-tablecolumnhemain\"></th>\n                                    <th className=\"forecast-tablecolumnhehum\"></th>\n                                    <th className=\"forecast-tablecolumnhepres\"></th>\n                                </tr>\n\n                                {/* All rows fetch the temperature, humidity and pressure for the next 5 days */}\n                                <tr className=\"forecast-tablerow\">\n                                    <td className=\"forecast-tablecolumndate\">{dateBuilder(new Date(firday * 1000))}</td>\n                                    <td className=\"forecast-tablecolumntemp\">{stateForecast.list[4].main.temp}°</td>\n                                    <td className=\"forecast-tablecolumnmain\">{stateForecast.list[4].weather[0].main}</td>\n                                    <td className=\"forecast-tablecolumnhum\">{stateForecast.list[4].main.humidity}%</td>\n                                    <td className=\"forecast-tablecolumnpres\">{stateForecast.list[4].main.pressure}p</td>\n                                </tr>\n                                <tr className=\"forecast-tablerow\">\n                                    <td className=\"forecast-tablecolumndate\">{dateBuilder(new Date(secday * 1000))}</td>\n                                    <td className=\"forecast-tablecolumntemp\">{stateForecast.list[12].main.temp}°</td>\n                                    <td className=\"forecast-tablecolumnmain\">{stateForecast.list[12].weather[0].main}</td>\n                                    <td className=\"forecast-tablecolumnhum\">{stateForecast.list[12].main.humidity}%</td>\n                                    <td className=\"forecast-tablecolumnpres\">{stateForecast.list[12].main.pressure}p</td>\n                                </tr>\n                                <tr className=\"forecast-tablerow\">\n                                    <td className=\"forecast-tablecolumndate\">{dateBuilder(new Date(thiday * 1000))}</td>\n                                    <td className=\"forecast-tablecolumntemp\">{stateForecast.list[20].main.temp}°</td>\n                                    <td className=\"forecast-tablecolumnmain\">{stateForecast.list[20].weather[0].main}</td>\n                                    <td className=\"forecast-tablecolumnhum\">{stateForecast.list[20].main.humidity}%</td>\n                                    <td className=\"forecast-tablecolumnpres\">{stateForecast.list[20].main.pressure}p</td>\n                                </tr>\n                                <tr className=\"forecast-tablerow\">\n                                    <td className=\"forecast-tablecolumndate\">{dateBuilder(new Date(forday * 1000))}</td>\n                                    <td className=\"forecast-tablecolumntemp\">{stateForecast.list[28].main.temp}°</td>\n                                    <td className=\"forecast-tablecolumnmain\">{stateForecast.list[28].weather[0].main}</td>\n                                    <td className=\"forecast-tablecolumnhum\">{stateForecast.list[28].main.humidity}%</td>\n                                    <td className=\"forecast-tablecolumnpres\">{stateForecast.list[28].main.pressure}p</td>\n                                </tr>\n                                <tr className=\"forecast-tablerow\">\n                                    <td className=\"forecast-tablecolumndate\">{dateBuilder(new Date(fivday * 1000))}</td>\n                                    <td className=\"forecast-tablecolumntemp\">{stateForecast.list[36].main.temp}°</td>\n                                    <td className=\"forecast-tablecolumnmain\">{stateForecast.list[36].weather[0].main}</td>\n                                    <td className=\"forecast-tablecolumnhum\">{stateForecast.list[36].main.humidity}%</td>\n                                    <td className=\"forecast-tablecolumnpres\">{stateForecast.list[36].main.pressure}p</td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </main>\n            <div className=\"bottom\">\n                {/* Links to access independent pages when user clicks on them */}\n                <Link to={\"/Home\"}><div className=\"widget-home\" style={ { margin: '40px 00px 0px 20px', display: \"inline-block\"} }></div></Link>\n                <Link to={\"/Currentweather\"}><div className=\"widget-current2\" style={ { margin: '40px 00px 0px 0px', display: \"inline-block\"} }></div></Link>\n                <Link to={\"/Gear\"}><div className=\"widget-gear\" style={ { margin: '40px 20px 0px 0px', display: \"inline-block\" }}></div></Link>\n            </div>\n        </div>\n        </div>\n    );\n}\n\nexport default Weatherforecast;\n{/* Export the Weatherforecast function for access in other pages */}","import React, {Component} from 'react';\n\nclass Gear extends Component { //this is a class for a single \"recommended gear\" element\n\n    state = {\n        title: this.props.title,  //title of the card\n        message: this.props.message, //text, underneath the title\n        value: this.props.value,\n        imageUrl: 'https://picsum.photos/200',\n        tags: ['tag1', 'tag2', 'tag3'] //could be list of objects and use tag.id etc\n    };\n\n    styles = {\n        fontSize: 20,\n        backgroundColor: '#F9F9F9',\n        margin: '20px 20px 0px 20px',\n        borderRadius: 10,\n        opacity: 0.65,\n        padding: 7,\n    }\n\n    messageStyle = {\n        fontSize: 15,\n    }\n\n    /*renderList(){\n        if (this.state.tags.length === 0) return <p>Array is empty!</p>\n        return this.state.tags.map(tag => <li key={tag}>{tag}</li>)\n    }*/\n\n    constructor(props) {\n        super(props);\n        //this.handleIncrement = this.handleIncrement.bind(this);\n    }\n\n\n    /*handleIncrement(){\n        this.setState({value: this.state.value + 1});\n    }*/\n\n\n    render() {\n        return (\n            <React.Fragment>\n                <div style={this.styles}>\n                    <b>{this.props.title}</b> <br/>\n                    <span style={this.messageStyle}>{this.props.message}</span>\n                </div>\n            </React.Fragment>\n        )\n    }\n\n    formatCount() {\n        const {value} = this.state;\n        return value === 0 ? 'zero' : value;\n    }\n\n}\n\nexport default Gear;\n","export default __webpack_public_path__ + \"static/media/sunny.33293481.jpg\";","export default __webpack_public_path__ + \"static/media/cloudy.8ac3aa6b.jpg\";","//Import all required functions\nimport React, {Component, useContext} from 'react';\nimport {SearchContext} from '../SearchContext';\nimport {Link} from 'react-router-dom';\n//import required pictures\nimport Gear from \"./gear\";\nimport sunny from \"../assets/sunny.jpg\";\nimport cloudy from \"../assets/cloudy.jpg\";\n\n\nclass GearList extends Component{\n\n    state = {\n        gear: [\n            {id: 1, title: \"\", message: \"\"}, //This array will hold all the recommended gears\n            {id: 2, title: \"\", message: \"\"},\n            {id: 3, title: \"\"},\n            {id: 4, title: \"\"},\n        ],\n        currentLocation: \"nowhere\", //stores the current location\n        backgroundImage: `url(${sunny})`,\n        query: this.props.query, //this should be equal to whatever the user has entered on the main page\n        buttonHeight: -270 //to dynamically determine button height, depending on the number of results //was -181\n    }\n\n    styles = {\n        backgroundImage: this.state.backgroundImage,\n        backgroundSize: 'cover',\n        width: 414,\n        height: 786,\n        textAlign: 'center',\n        paddingTop: 30,\n        margin: '0 auto',\n        };\n\nfontColor = \"black\"; //the font colour will change, depending on if the background is light or dark\n\n    getWeather(){ //get weather information from API\n        var key = 'ba4c76e4ecc59db40fe4d0ccb7aea0bf';\n\n        if (this.state.query === \"\"){\n            console.log(\"Waiting for user to enter a location\");\n        } else {\n            const url = 'https://api.openweathermap.org/data/2.5/weather?q=' + this.state.query + '&appid=' + key + '&units=metric'; //fetch data from server\n\n            fetch(url) //fetching data from openWeather\n                .then(function (resp) {\n                    return resp.json()\n                }) // Convert data to json\n                .then(data => {\n                    console.log(data);\n                    this.setVars(data);\n                })\n                .catch(function hi () {\n                    // catch any errors\n                    console.log(\"ERROR\");\n                    //alert(\"Location not found\");\n                    //this.state.error = true;\n                });\n        }\n    }\n\n    constructor(props) {\n        super(props);\n        //this.setState({query:`${stateQuery}`});\n        this.getWeather = this.getWeather.bind(this);\n        //call API\n        this.getWeather(); //get weather\n    }\n\n\nsetVars(data){ //this method initialises key variables\n        console.log(data); //print response from server (for testing)\n    let newGear = [ //will contain all content for gear divs\n        {id: 1, title: \"Helmet\", message: \"We always recommend a helmet, whatever the weather\"},\n    ];\n    newGear.push({id: 2, title: data.main.temp < 10 ? \"Warm clothes\" : \"Cool clothes\", message: data.main.temp < 10 ? \"It's cold today!\" : \"It's warm today\"})\n    if (data.wind.speed >= 8) newGear.push({id: 3, title: \"Glasses\", message: \"It's windy out there\"});\n    if (data.main.temp <= 0) newGear.push({id: 4, title: \"Ice tyres\", message: \"Brrr... try not to freeze\"},);\n\n    let currentDate = Math.round(+new Date()/1000) ; //new date, converted to API format\n    newGear.push({id: 5, title: currentDate > data.sys.sunset || currentDate < data.sys.sunrise ? \"Bike lights\" : \"Sunglasses\", message: currentDate > data.sys.sunset || currentDate < data.sys.sunrise ? \"It's dark outside\" : \"The sun is out\" })\n\n    this.fontColor = currentDate > data.sys.sunset || currentDate < data.sys.sunrise ? \"white\" : \"black\"; //changing font colour depending on background colour\n\n    if(data.main.temp > 12) { //changing background, depending on the weather\n        this.setState ( {backgroundImage: `url(${sunny})`} );\n    } else {\n        this.setState ( {backgroundImage: `url(${cloudy})`} );\n    }\n    this.styles = {\n        display: 'flex',\n        flexDirection: \"column\",\n        backgroundImage: this.state.backgroundImage,\n        backgroundSize: 'cover',\n        width: 414,\n        height: 786,\n        textAlign: 'center',\n        paddingTop: 30,\n        margin: '0 auto',\n    };\n\n\n    this.setState({currentLocation: data.name});\n    this.setState({gear: newGear});\n}\n\n\n\nsetQuery(newQuery){\n        this.state.query = newQuery;\n}\n\n    search = evt => { //search event\n        if (evt.key === \"Enter\") {\n            this.getWeather(); //get weather when searched\n        }\n    }\n\n\n    render() {\n\n        return (\n            <div style={ this.styles } >\n\n                <header>\n                    <div className=\"name\">Smart Biking</div>\n                </header>\n                <div style={{  height: 300, paddingBottom:10  }}>\n\n              <h1 className=\"name_1\">Gear Recommendation</h1>\n\n\n\n\n\n                    <h4 className=\"name_2\" style={{margin: '40px 20px 50px 20px'}}>{this.state.query === \"\" ? \"Please enter a location\" : \"The following gear is recommended based on current weather conditions in \" + this.state.currentLocation}</h4>\n                    { this.state.gear.map(gear => <Gear key={gear.id} title = {gear.title} message={gear.message}/>) }\n                </div>\n\n              <div className={\"bottom\"} style={{ bottom: this.state.buttonHeight , position: \"relative\" }}>\n                  <Link to={\"/Home\"}><div className=\"widget-home\" style={ { margin: '40px 00px 0px 20px', display: \"inline-block\"} }></div></Link>\n                  <Link to={\"/Weatherforecast\"}><div className=\"widget-weafor\" style={ { margin: '40px 00px 0px 0px', display: \"inline-block\"} }></div></Link>\n                  <Link to={\"/Currentweather\"}><div className=\"widget-current\" style={ { margin: '40px 20px 0px 0px', display: \"inline-block\" }}></div></Link>\n              </div>\n\n            </div>\n\n        );\n\n    }\n}\n\nexport default GearList;\n","import React, { useContext } from 'react';\nimport {Link} from \"react-router-dom\";\nimport {SearchContext} from '../SearchContext';\nimport GearList from './gearList';\n\nfunction Gearlistcontainer() { //this is a container for the GearList page\n  //a container was necessary because React doesn't allow context variables in a class, so must get the variables here, and pass them as props\n    const {ObtQuery} = useContext(SearchContext);\n    const [stateQuery, setstateQuery] = ObtQuery;\n\n  return (\n    <GearList query={stateQuery}/>\n  );\n}\n\nexport default Gearlistcontainer;\n","//Import all required functions\nimport React, { useContext } from 'react';\nimport {Link} from \"react-router-dom\";\nimport {SearchContext} from '../SearchContext';\n//import currentweather.css to apply styling to elements of page\nimport './currentweather.css';\n\nfunction Currentweather() {\n  //Initialises variables from SearchContent.js file to fetch API data\n  const {ObtWeather, ObtForecast} = useContext(SearchContext);\n  const [stateWeather, setstateWeather] = ObtWeather;\n  const [stateForecast, setstateForecast] = ObtForecast;\n\n  //function which generates the date\n  const dateBuilder = (d) => {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thur\", \"Fri\", \"Sat\"];\n\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n\n    return `${day} ${date} ${month}`\n  }\n\n  //function to convert UNIX time to standard depiction\n  const timeBuilder = (d) => {\n    let hour = d.getHours();\n    let minute = d.getMinutes();\n    \n    if (hour < 10) {hour = \"0\" + hour};\n    if (minute < 10) {minute = \"0\" + minute};\n\n    return `${hour}:${minute}`\n  }\n\n  return (\n    <div className={(typeof stateWeather.main != \"undefined\") ? ((stateWeather.main.temp > 12) ? 'app' : 'app cloudy') : 'app' }>{/*Change background based on weather conditions*/}\n    <header>\n      <div className=\"name\">Smart Biking</div>\n      <h1>Current Weather</h1>\n    </header>\n\n    {/*Header section at top of page*/}\n    <container className=\"current-head2\">\n      <div className=\"current-date\"><b>Now</b> {dateBuilder(new Date())}</div>{/*Use datebuilder function to generate todays date and display*/}\n      <div className=\"current-location\">{stateWeather.name}, {stateWeather.sys.country}</div>{/*Display location name and country from API*/}\n      <div className=\"current-weathr\">{Math.round(stateWeather.main.temp)}°c</div>{/*Display temperature from weather API*/}\n    </container>\n\n\n    <main>\n      {/*This section is for the icons and values in the weather analysis div*/}\n      <div>\n        <div className=\"current-analysis\">\n          <h3 className=\"current-weana\">Weather analysis</h3>\n\n          <div className=\"current-stats\">\n            <div className=\"current-windspeed\"></div>\n            <div className=\"current-windspeed2\">{Math.round(stateWeather.wind.speed)} km/h</div>{/*Display wind speed from API*/}\n            <div className=\"current-windspeed3\">Wind</div>\n\n            <div className=\"current-humidity\"></div>\n            <div className=\"current-humidity2\">{stateWeather.main.humidity}%</div>\n            <div className=\"current-humidity3\">Humidity</div>\n\n            <div className=\"current-pressure\"></div>\n            <div className=\"current-pressure2\">{stateWeather.main.pressure}p</div>\n            <div className=\"current-pressure3\">Pressure</div>\n\n            <div className=\"current-visibility\"></div>\n            <div className=\"current-visibility2\">{stateWeather.visibility}m</div>\n            <div className=\"current-visibility3\">Visibility</div>\n\n            <div className=\"current-winddir\"></div>\n            <div className=\"current-winddir2\">{Math.round(stateWeather.wind.deg)}°</div>\n            <div className=\"current-winddir3\">Wind direction</div>\n\n            <div className=\"current-clouds\"></div>\n            <div className=\"current-clouds2\">{stateWeather.clouds.all}%</div>\n            <div className=\"current-clouds3\">Clouds</div>\n\n            <div className=\"current-mint\"></div>\n            <div className=\"current-mint2\">{Math.round(stateWeather.main.temp_min)}°</div>\n            <div className=\"current-mint3\">Min temp</div>\n\n            <div className=\"current-maxt\"></div>\n            <div className=\"current-maxt2\">{Math.round(stateWeather.main.temp_max)}°</div>\n            <div className=\"current-maxt3\">Max temp</div>\n\n            <div className=\"current-sunrise\"></div>\n            <div className=\"current-sunrise2\">{timeBuilder(new Date(`${stateWeather.sys.sunrise}`*1000))}</div>\n            <div className=\"current-sunrise3\">Sunrise</div>\n\n            <div className=\"current-sunset\"></div>\n            <div className=\"current-sunset2\">{timeBuilder(new Date(`${stateWeather.sys.sunset}`*1000))}</div>\n            <div className=\"current-sunset3\">Sunset</div>\n          </div>\n\n        </div>\n\n      </div>\n\n    {/*Navigation widgets on bottom of page*/}\n    <div className=\"bottom\">\n        <Link to={\"/Home\"}><div className=\"widget-home\" style={ { margin: '40px 00px 0px 20px', display: \"inline-block\"} }></div></Link>\n        <Link to={\"/Weatherforecast\"}><div className=\"widget-weafor\" style={ { margin: '40px 00px 0px 0px', display: \"inline-block\"} }></div></Link>\n        <Link to={\"/Gear\"}><div className=\"widget-gear\" style={ { margin: '40px 20px 0px 0px', display: \"inline-block\" }}></div></Link>\n    </div>\n    </main>\n\n    </div>\n  );\n}\n\nexport default Currentweather;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Search from './Search';\nimport {SearchProvider} from './SearchContext';\nimport Home from './Home/Home';\nimport Weatherforecast from './Weatherforecast/Weatherforecast';\nimport GearList from './Gear/gearList';\nimport Gearlistcontainer from './Gear/gearListcontainer';\nimport Currentweather from './Currentweather/Currentweather';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\n// Import all functions required in this page from named libraries\n\nReactDOM.render(\n  <SearchProvider>\n    <Router basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route exact path=\"/\">\n          <Search />\n        </Route>\n        <Route exact path=\"/Home\">\n          <Home />\n        </Route>\n        <Route exact path=\"/Weatherforecast\">\n          <Weatherforecast />\n        </Route>\n        <Route exact path=\"/Gear\">\n          <Gearlistcontainer />\n        </Route>\n        <Route exact path=\"/Currentweather\">\n          <Currentweather />\n        </Route>\n      </Switch>\n    </Router>\n  </SearchProvider>,\n  /*Enable switching between pages when the Route is called*/\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}